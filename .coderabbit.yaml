# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json

# Natural language in which you want CodeRabbit to write the review.
language: en-US

# Set the tone of reviews and chat.
# Example: 'You must use talk like Mr. T. I pity the fool who doesn't!'
tone_instructions: ''

# Enable early-access features.
early_access: true

# Enable free tier features for users not on a paid plan.
enable_free_tier: true

reviews:
  # Set the profile for reviews. Assertive profile yields more feedback,
  # that may be considered nitpicky.
  profile: assertive

  # Approve the review once CodeRabbit's comments are resolved.
  request_changes_workflow: false

  # Generate a high level summary of the changes in the PR description.
  high_level_summary: true

  # Placeholder in the PR description that gets replaced with the high level
  # summary.
  high_level_summary_placeholder: '@coderabbitai summary'

  # Include the high level summary in the walkthrough comment.
  high_level_summary_in_walkthrough: true

  # Add this keyword in the PR title to auto-generate the title.
  auto_title_placeholder: '@coderabbitai'

  # Custom instructions for auto-generating the PR title.
  auto_title_instructions: ''

  # Post review details on each review.
  # Additionally, post a review status when a review is skipped in
  # certain cases.
  review_status: true

  # Set the commit status to 'pending' when the review is in progress and
  #  'success' when it is complete.
  commit_status: true

  # Set the commit status to 'failure' when the PR cannot be reviewed
  # by CodeRabbit for any reason.
  fail_commit_status: false

  # Generate walkthrough in a markdown collapsible section.
  collapse_walkthrough: false

  # Generate a summary of the changed files in the walkthrough.
  changed_files_summary: true

  # Generate sequence diagrams in the walkthrough.
  sequence_diagrams: true

  # Generate an assessment of how well the changes address the linked
  # issues in the walkthrough.
  assess_linked_issues: true

  # Include possibly related issues in the walkthrough.
  related_issues: true

  # Include possibly related pull requests in the walkthrough.
  related_prs: true

  # Suggest labels based on the changes in the pull request in the walkthrough.
  suggested_labels: false

  # Automatically apply the suggested labels to the PR.
  auto_apply_labels: false

  # Suggest reviewers based on the changes in the pull request in
  # the walkthrough.
  suggested_reviewers: true

  # Automatically assign suggested reviewers to the pull request
  auto_assign_reviewers: false

  # Generate a poem in the walkthrough comment.
  poem: false

  # Provide guidelines for suggesting labels for the PR.
  # When specific labels or instructions are provided, only those labels are
  # considered, though previous examples are still used to inform
  # the suggestions. If no such labels are provided, suggestions are based
  # solely on previous PRs.
  labeling_instructions: []

  # Specify file patterns to include or exclude in a review using glob
  # patterns (e.g., !dist/**, src/**). These patterns also apply to
  # 'git sparse-checkout', including specified patterns and ignoring excluded
  # ones (starting with '!') when cloning the repository.
  path_filters: ['!dist/**', 'dist/licenses.txt']

  path_instructions:
    - path: 'dist/licenses.txt'
      instructions: >
        This file contains the licenses of all the dependencies used in the
        project. Please ensure that no "viral" or copyleft licenses are
        introduced. Specifically, watch for the following licenses and flag them
        for review:

        - GNU General Public License (GPL) in any version (v1, v2, v3)

        - GNU Affero General Public License (AGPL)

        - Creative Commons ShareAlike (CC BY-SA) licenses

        - Mozilla Public License 2.0 (MPL 2.0)

        - Viral Public License (VPL)

        - Design Science License (DSL)

        - Round Robin Software License (RRSL)

        Also, please flag any license that is not a well-known permissive
        open-source license like MIT, Apache 2.0, or BSD.
        The file is autogenerated, so do not suggest format and styling changes.
    - path: 'action.yml'
      instructions: >
        This file defines the GitHub Action's metadata. When this file is
        modified, please ensure that the `README.md` is also updated to reflect
        any changes to the action's inputs or outputs. This keeps the
        documentation in sync with the action's behavior.
    - path: 'index.js'
      instructions: >
        This is the main logic file. When changes are made here, please ensure
        that the corresponding test file, `index.spec.js`, is also updated with
        relevant tests to cover the new code or changes.
    - path: 'reporters/**'
      instructions: >
        Files in this directory handle the presentation of linting results. When
        reviewing changes here, please focus on the user experience. The output
        should be clear, concise, and provide actionable feedback to help users
        resolve issues quickly. These reporters are tested indirectly in
        `index.spec.js`. Ensure that any modifications to reporter logic are
        covered by updating the relevant tests in `index.spec.js`.

  # Abort the in-progress review if the pull request is closed or merged.
  abort_on_close: true

  # Disable caching of code and dependencies. This will force CodeRabbit to
  # download the code and dependencies fresh from the repository each time.
  disable_cache: false

  auto_review:
    # Automatic code review
    enabled: true

    # Automatic incremental code review on each push
    auto_incremental_review: false

    # Ignore reviewing if the title of the pull request contains any of these
    # keywords (case-insensitive).
    ignore_title_keywords: []

    # Restrict automatic reviews to only those pull requests that match one of
    # the specified labels.
    labels: []

    # Review draft PRs.
    drafts: false

    # Base branches (other than the default branch) to review.
    # Accepts regex patterns.
    base_branches: []

  finishing_touches:
    docstrings:
      # Allow CodeRabbit to generate docstrings for PRs.
      enabled: true

    unit_tests:
      # Allow CodeRabbit to generate unit tests for PRs.
      enabled: true

  tools:
    ast-grep:
      rule_dirs: []
      util_dirs: []
      essential_rules: true
      packages: []
    shellcheck:
      enabled: true
    ruff:
      enabled: false
    markdownlint:
      enabled: true
    github-checks:
      enabled: true
      timeout_ms: 90000
    languagetool:
      enabled: true
      enabled_rules: []
      disabled_rules: []
      enabled_categories: []
      disabled_categories: []
      enabled_only: false
      level: default
    biome:
      enabled: false
    hadolint:
      enabled: false
    swiftlint:
      enabled: false
    phpstan:
      enabled: false
    phpmd:
      enabled: false
    phpcs:
      enabled: false
    golangci-lint:
      enabled: false
    yamllint:
      enabled: true
    gitleaks:
      enabled: true
    checkov:
      enabled: false
    detekt:
      enabled: false
    eslint:
      enabled: true
    flake8:
      enabled: false
    rubocop:
      enabled: false
    buf:
      enabled: false
    regal:
      enabled: false
    actionlint:
      enabled: true
    pmd:
      enabled: false
    cppcheck:
      enabled: false
    semgrep:
      enabled: false
    circleci:
      enabled: false
    clippy:
      enabled: false
    sqlfluff:
      enabled: false
    prismaLint:
      enabled: false
    pylint:
      enabled: false
    oxc:
      enabled: true
    shopifyThemeCheck:
      enabled: false
    luacheck:
      enabled: false
    brakeman:
      enabled: false
    dotenvLint:
      enabled: false
    htmlhint:
      enabled: false
    checkmake:
      enabled: false
  pre_merge_checks: {}

chat:
  # Enable the bot to reply automatically without requiring the user to tag it.
  auto_reply: true

  integrations:
    jira:
      # Enable the Jira integration for opening issues, etc. 'auto' disables
      # the integration for public repositories.
      usage: disabled

    linear:
      # Enable the Linear integration for opening issues, etc. 'auto' disables
      # the integration for public repositories.
      usage: disabled

knowledge_base:
  # Opt out of all knowledge base features that require data retention.
  opt_out: false

  web_search:
    # Enable the web search integration.
    enabled: true

  # CodeRabbit will analyse and learn from your organization's code guidelines,
  # which you can mention in the file patterns section. These guidelines will
  # then be used to conduct thorough code reviews.
  code_guidelines:
    # Enable CodeRabbit to enforce your organization's coding standards
    # during reviews.
    enabled: true

    # Specify files for your coding guideline documents in this section.
    # CodeRabbit will scan these files to understand your team's standards and
    # apply them during code reviews.
    # Multiple files supported.
    # File names are case-sensitive.
    #
    # Common files like: (**/.cursorrules, .github/copilot-instructions.md,
    # **/CLAUDE.md, **/GEMINI.md, **/.cursor/rules/*, **/.windsurfrules,
    # **/.clinerules/*, **/.rules/*, **/AGENT.md) are included by default
    filePatterns: []

  learnings:
    # Specify the scope of learnings to use for the knowledge base.
    # 'local' uses the repository's learnings,
    # 'global' uses the organization's learnings, and
    # 'auto' uses repository's learnings for public repositories and
    # organization's learnings for private repositories.
    scope: auto

  issues:
    # Specify the scope of git platform (GitHub/GitLab) issues to use for the
    # knowledge base.
    # 'local' uses the repository's issues,
    # 'global' uses the organization's issues, and
    # 'auto' uses repository's issues for public repositories and
    # organization's issues for private repositories.
    scope: auto

  jira:
    # Enable the Jira knowledge base integration.
    # 'auto' disables the integration for public repositories.
    usage: disabled

    # Specify the Jira project keys to use for the knowledge base.
    project_keys: []

  linear:
    # Enable the Linear knowledge base integration.
    # 'auto' disables the integration for public repositories.
    usage: disabled

    # Specify the Linear team keys (identifiers) to use for the knowledge base.
    # E.g. 'ENG'
    team_keys: []

  pull_requests:
    # Specify the scope of pull requests to use for the knowledge base.
    # 'local' uses the repository's pull requests,
    # 'global' uses the organization's pull requests, and
    # 'auto' uses repository's pull requests for public repositories and
    # organization's pull requests for private repositories.
    scope: auto

code_generation:
  docstrings:
    # Natural language in which you want CodeRabbit to generate docstrings.
    language: en-US

    # Provide additional guidelines for docstring generation
    # based on file paths.
    path_instructions: []

  unit_tests:
    # Provide additional guidelines for unit test generation
    # based on file paths.
    path_instructions: []
